//HintName: My.Namespace.PersonMapFromDataRecordExtension.g.cs
// <auto-generated>
using System.Data;

namespace My.Namespace;
public static partial class PersonMapper
{
    static class Ordinal
    {
        public static bool __initialized__;
        public static int Id;
        public static int Age;
        public static int IsGood;
        public static int IsBad;
        public static int BirthDate;
        public static int LastSeen;
        public static int Name;
        public static int MiddleName;
    }
    public static Person ToPerson(this IDataRecord record)
    {
        if (!Ordinal.__initialized__)
        {
            Ordinal.Id = record.GetOrdinal("id");
            Ordinal.Age = record.GetOrdinal("the_age");
            Ordinal.IsGood = record.GetOrdinal("is_good");
            Ordinal.IsBad = record.GetOrdinal("is_bad");
            Ordinal.BirthDate = record.GetOrdinal("birth_date");
            Ordinal.LastSeen = record.GetOrdinal("last_seen");
            Ordinal.Name = record.GetOrdinal("name");
            Ordinal.MiddleName = record.GetOrdinal("middle_name");
            System.Threading.Thread.MemoryBarrier();
            Ordinal.__initialized__ = true;
        }
        return new Person
        {
            Id = record.GetInt32(Ordinal.Id),
            Age = record.IsDBNull(Ordinal.Age) ? null : record.GetInt32(Ordinal.Age),
            IsGood = record.GetBoolean(Ordinal.IsGood),
            IsBad = record.IsDBNull(Ordinal.IsBad) ? null : record.GetBoolean(Ordinal.IsBad),
            BirthDate = record.GetDateTime(Ordinal.BirthDate),
            LastSeen = record.IsDBNull(Ordinal.LastSeen) ? null : record.GetDateTime(Ordinal.LastSeen),
            Name = record.GetString(Ordinal.Name),
            MiddleName = record.GetString(Ordinal.MiddleName),
        };
    }
}
